name: CI-Noetic

on: [push, pull_request]

env:
  ADDITIONAL_DEBS: "clang-tidy libclang-dev"
  CATKIN_LINT: true
  CATKIN_LINT_ARGS: '--strict'
  CMAKE_ARGS: "-DCATKIN_ENABLE_CLANG_TIDY=true"
  ROS_DISTRO: noetic

jobs:
  testing-repo:
    name: "Build + Test with Testing Repo of noetic (http://packages.ros.org/ros-testing/ubuntu)"
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v1
      - uses: 'ros-industrial/industrial_ci@master'
        env:
          ROS_REPO: testing

  main-repo:
    name: "Build + Test with Main Repo of noetic (http://packages.ros.org/ros/ubuntu)"
    runs-on: ubuntu-20.04
    continue-on-error: true
    steps:
      - uses: actions/checkout@v1
      - uses: 'ros-industrial/industrial_ci@master'
        env:
          ROS_REPO: main

  clang-format:
    name: "Build + Test with clang format with Testing Repo of noetic (http://packages.ros.org/ros-testing/ubuntu)"
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v1
      - uses: 'ros-industrial/industrial_ci@master'
        env:
          ROS_REPO: testing
          CLANG_FORMAT_CHECK: file
          CLANG_FORMAT_VERSION: 10

  coverage:
    name: "Coverage check for psen_scan_v2"
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v1
      - uses: 'ros-industrial/industrial_ci@master'
        env:
          ROS_REPO: testing
          ADDITIONAL_DEBS: git
          CATKIN_LINT: false
          PARALLEL_TESTS: false
          BUILDER: colcon
          CMAKE_ARGS: '-DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="--coverage"'
          DOCKER_RUN_OPTS: '-e COVERAGE_EXCLUDES="*/psen_scan_v2/src/psen_scan_driver.cpp"'
          AFTER_SCRIPT: 'git clone --depth=1 --branch master https://github.com/PilzDE/industrial_ci_addons.git /industrial_ci_addons && source /industrial_ci_addons/check_coverage.sh && check_coverage psen_scan_v2'
