<?xml version="1.0" encoding="UTF-8"?><diagram program="umlet" version="13.3">
  <help_text>// Uncomment the following line to change the fontsize and font:
fontsize=10
// fontfamily=SansSerif //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>12</zoom_level>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>84</x>
      <y>2232</y>
      <w>900</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>symbol=component
layer=-10
bg=yellow
&lt;&lt;Hardware&gt;&gt;
Scanner device</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>636</x>
      <y>2088</y>
      <w>108</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>lt=&lt;..
UDP package</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLActor</id>
    <coordinates>
      <x>468</x>
      <y>0</y>
      <w>120</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>User
(ROS agnostic)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>84</x>
      <y>1932</y>
      <w>900</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>symbol=component
style=wordwrap
layer=-10
Primitive communication layer
--
**Explanation:**
This software layer takes care of the primitive network communication.
The software components of this abstraction level delivere data as simple byte vectors to the next abstraction level.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>636</x>
      <y>1788</y>
      <w>180</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>lt=&lt;..
byte vector 
(e.g. std::vector&lt;char&gt;)</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>396</x>
      <y>924</y>
      <w>216</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>halign=center
valign=center
Idle
group=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>396</x>
      <y>1032</y>
      <w>216</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>halign=center
valign=center
WaitForStartReply
group=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>492</x>
      <y>960</y>
      <w>108</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
StartRequest
group=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>396</x>
      <y>1140</y>
      <w>216</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>halign=center
valign=center
WaitForMonitoringFrame
group=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>492</x>
      <y>1068</y>
      <w>240</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
RawReplyReceived [isStartReply()]
group=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>492</x>
      <y>1176</y>
      <w>108</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
StopRequest
group=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>396</x>
      <y>1284</y>
      <w>216</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>halign=center
valign=center
WaitForStopReply
group=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>600</x>
      <y>1140</y>
      <w>240</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
RawMonitoringFrameReceived
group=1</panel_attributes>
    <additional_attributes>10.0;10.0;30.0;10.0;30.0;30.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>156</x>
      <y>768</y>
      <w>756</w>
      <h>696</h>
    </coordinates>
    <panel_attributes>symbol=component
style=wordwrap
layer=0
group=1
&lt;&lt;State machine&gt;&gt;
ScannerProtocolDef
--
**Explanation:**
This component represents the scanner protocol/ state machine (indirectly) described in the Communication manual of the scanner on page 1.
--


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>84</x>
      <y>264</y>
      <w>912</w>
      <h>228</h>
    </coordinates>
    <panel_attributes>symbol=component
style=wordwrap
layer=-10
&lt;&lt;User API&gt;&gt;
ScannerV2
--
**Explanation:**
This abstraction layer represents the user API (ROS-agnostic).
It enables users to configurate, start and stop a single scanner by providing a high level API.
--
+ Scanner(ScannerConfiguration, LaserscanAvailableCallback)

+ start()
+ stop()

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>516</x>
      <y>120</y>
      <w>36</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>lt=&lt;..&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>84</x>
      <y>1632</y>
      <w>900</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>symbol=component
style=wordwrap
layer=-10
Data Serializer / Deserializer layer
--
**Explanation:**
This abstraction layer consists of all software components transforming primitive data (byte vectors) into higher level data types (like scanner_reply::Message) and vice versa.
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>648</x>
      <y>1500</y>
      <w>204</w>
      <h>156</h>
    </coordinates>
    <panel_attributes>lt=..&gt;
scanner_reply::Message,
monitoring_frame::Message</panel_attributes>
    <additional_attributes>10.0;110.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>360</x>
      <y>1500</y>
      <w>168</w>
      <h>156</h>
    </coordinates>
    <panel_attributes>lt=&lt;..
start_request::Message</panel_attributes>
    <additional_attributes>10.0;110.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1116</x>
      <y>264</y>
      <w>264</w>
      <h>228</h>
    </coordinates>
    <panel_attributes>symbol=component
style=wordwrap
ScannerConfiguration
--
**Explanation:**
Higher level data type storing the configuration details of the scanner,
like scanner IP &amp; port, scan range, scan resolution, etc.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>288</x>
      <y>948</y>
      <w>132</w>
      <h>384</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
m2=StopRequest
group=1</panel_attributes>
    <additional_attributes>90.0;10.0;20.0;60.0;20.0;300.0;90.0;300.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>300</x>
      <y>1032</y>
      <w>120</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=-&gt;

group=1</panel_attributes>
    <additional_attributes>80.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>600</x>
      <y>924</y>
      <w>132</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
StartTimeout
group=1</panel_attributes>
    <additional_attributes>10.0;10.0;30.0;10.0;30.0;30.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>216</x>
      <y>1140</y>
      <w>204</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
m2=MonitoringFrameTimeout
group=1</panel_attributes>
    <additional_attributes>150.0;10.0;120.0;10.0;120.0;30.0;150.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>396</x>
      <y>1392</y>
      <w>216</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>halign=center
valign=center
Stopped
group=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>492</x>
      <y>1320</y>
      <w>240</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
m1=RawReplyReceived [isStopReply()]
group=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>984</x>
      <y>360</y>
      <w>156</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>348</x>
      <y>1788</y>
      <w>180</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>lt=&lt;..
byte vector
(e.g. std::vector&lt;char&gt;)</panel_attributes>
    <additional_attributes>10.0;120.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>336</x>
      <y>2088</y>
      <w>108</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>lt=&lt;..
UDP package</panel_attributes>
    <additional_attributes>10.0;120.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>84</x>
      <y>588</y>
      <w>900</w>
      <h>924</h>
    </coordinates>
    <panel_attributes>symbol=component
style=wordwrap
layer=-10
Scanner protocol layer
--
**Explanation:**
This abstraction layer implements the scanner protocol. In other words, this layer controls and organizes when and what data are sent and/or received from the scanner.
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>540</x>
      <y>480</y>
      <w>72</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>lt=&lt;..
&lt;&lt;uses&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;90.0;10.0;10.0</additional_attributes>
  </element>
</diagram>
